=== Nedded ===
Lua 5.1
PortAudio v19

Probably doesn't work with LuaJIT.

=== Build instructions ===

Edit src/config.h.
Run make.
???
Profit.

=== Usage ===

$ lua
Lua 5.1.4  Copyright (C) 1994-2008 Lua.org, PUC-Rio
> player = require 'player'
> function sine(freq)
>>     return function(out, frames, pos, rate, channels)
>>         for i = 1,frames do
>>             out[i] = math.sin( (pos+i-1)/rate * 2 * math.pi * freq )
>>         end
>>     end
>> end
> p = player.new(sine(440), 44100, 1, 1024)
> p:play()
> p:stop()
>
> soundfile = require 'soundfile'
> out = {}
> sine(440)(out, 44100, 0, 44100)
> soundfile.write('sine.wav', out, 44100, 1, 16)
> print(soundfile.info('test.wav')
44100	44100	1	Microsoft WAV
> function stream(path)
>     local inp = soundfile.read('test.wav')
>     return function(out, frames, pos)
>         for i = 1,frames do out[i] = inp[pos+i] or 0 end
>     end
> end
> p = player.new(stream('test.wav'))
> p:play()

=== API ===

player.new(callback, samplerate, channels, buffer_size)
   Creates a new player object.
   Default values:
      samplerate  ... 44100
      channels    ... 1
      buffer_size ... 2048

callback(out, frames, pos, rate, channels)
   Generates samples.
   Arguments:
      out       ... Table to write the samples (performance reasons).
                    Contains the samples from previous run.
      frames    ... Number of frames to run. One frame consists of the
                    samples for all channels.
      pos       ... Starting sample position. E.g. with buffer_size = 1024,
                    pos = 0 on the first run, pos = 1024 on the second, and so on.
      rate      ... Samplerate. Get the sample time with pos/rate.
      channels  ... Number of channels. With more than one channel, samples need
                    to be written interleaved, i.e. with channels = 2:
                    out[1] = sample[1].left, out[2] = sample[1].right, out[3] = sample[2].left, ...

The callback may contain upvalues, but has to be a Lua function (not a C-function).

=== License ===
Copyright (c) 2011 Matthias Richter

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
